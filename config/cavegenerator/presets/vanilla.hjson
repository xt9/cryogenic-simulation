{
    blankSlate: true
    dimensions: [88]
    replaceableBlocks: [ "stone", "dirt" ]
    replaceDecorators: true
    caveBlocks: [
        {
            states: [ "lava" ]
            maxHeight: 10
        }
    ]
    rooms: {
         # The radius in blocks.
        scale: 6
         # Vertical height multiple of scale.
        scaleY: 0.5
    }
    tunnels: {
         # The average number of tunnel systems to try and
         # spawn per chunk.
        frequency: 20
         # Mininum starting height.
        minHeight: 8
         # Maximum starting height.
        maxHeight: 128
         # The length in blocks of this tunnel. A value of 0 
         # produces between 132-176.
        distance: 0
         # The 1 / X chance chance that multiple tunnels will
         # be spawned at each origin, instead of just one.
        systemChance: 0.25
         # The 1 / X chance that any origin will be skipped.
         # This has an effect of spawning each system in
         # isolated groups vs. everywhere.
        isolatedChance: 0.142
         # Whether to reduce the amount of aberrations in
         # in this cave's vertical angle. When this feature
         # is enabled, the amount that noiseY can change is
         # overall reduced, per segment.
        noiseYReduction: true
         # Whether branches should decrease in size from their
         # original tunnel's scale. You will most likely want
         # to disable this feature when using larger tunnels.
        resizeBranches: true
         # These values alter how much the horizontal angle
         # of each tunnel can change between segments.
        twistXZ: {
             # angle first gets changed by x.
            startVal: 0
             # angle = angle * x
            factor: 0.75
             # angle = angle + (randomValue * x)
            randFactor: 4
             # angle = angle^x
            exponent: 1
        }
         # These values alter how much the vertical angle
         # of each tunnel can change between segments.
        twistY: {
            startVal: 0
            factor: 0.9
            randFactor: 2
            exponent: 1
        }
         # These values alter the radius in blocks of each
         # tunnel.
        scale: {
            startVal: 0
             # startVal = startVal + (randomValue * x).
            startValRandFactor: 1
            factor: 1
            randFactor: 0
            exponent: 1
        }
         # scaleY is a multiple of scale on the vertical axis.
         # If scale == 6 and scaleY == 0.5, the height becomes 3.
         # These values alter scaleY between tunnel segments.
        scaleY: {
            startVal: 1
            factor: 1
            randFactor: 0
            exponent: 1
        }
         # The horizontal angle in radians.
        angleXZ: {
            startVal: 0
            startValRandFactor: 1
        }
         # The vertical angle in radians.
        angleY: {
            startVal: 0
            startValRandFactor: 0.25
        }
    }
     # Ravines are like tunnels, but with random variations in
     # horizontal scale. You could theoretically use this as
     # your main tunnels, if you're using multiple presets.
    ravines: {
        chance: 0.02
        minHeight: 20
        maxHeight: 40
        distance: 0
        twistXZ: {
            startVal: 0
            factor: 0.5
            randFactor: 4
            exponent: 1
        }
        twistY: {
            startVal: 0
            factor: 0.8
            randFactor: 2
            exponent: 1
        }
        scale: {
            startVal: 0
            startValRandFactor: 2
            factor: 1
            randFactor: 0
            exponent: 1
        }
        scaleY: {
             # This is essentially the second most important
             # variable accounting for the look of ravines.
            startVal: 3
            factor: 1
            randFactor: 0
            exponent: 1
        }
        angleXZ: {
            startVal: 0
            startValRandFactor: 1
        }
        angleY: {
            startVal: 0
            startValRandFactor: 0.25
        }
         # Similar to noiseYReduction, but not as random.
        noiseYFactor: 0.7
         # Contains an optional noise2D block used to change
         # the look of ravine walls. Placing / uncommenting
         # this block will completely override the vanilla
         # ravine wall generation features, producing
         # smoother, more organic surfaces.
        wallNoise: {
             /*
             noise2D: {
                  # Scale is ignored in this context.
                 scale: 0.5
                 frequency: 0.1
                 minVal: 0
                 maxVal: 4
             }
             */
        }
    }
     # See caverns.json for another example of caverns. These
     # are the default values.
    caverns: {
        enabled: false
        minHeight: 10
        maxHeight: 50
         # Optional 3D noise block for the main cavern shapes.
        noise3D: {
             # This does refer to noise frequency, but its use in
             # the case of caverns has the opposite effect. Higher
             # values mean less frequent pockets of air.
            frequency: 0.0143
             # scale for noise-based objects is from 0-1.
            scale: 0.2
            scaleY: 0.5
             # The number of passes. Increases resolution at the
             # cost of performance.
            octaves: 1
            type: SimplexFractal
            fractal: FBM
        }
         # Optional 2D noise block for the cavern ceiling.
         # The value produced by ceilNoise is added to the terrain
         # height at any given coordinate. In order to stop caverns
         # from punching holes through the surface, use negative
         # values only.
        ceiling: {
            noise2D: {
                 # No effect in this context.
                scale: 0.5
                frequency: 0.02
                minVal: -17
                maxVal: -3
            }
        }
         # Optional 2d noise block for the cavern floor.
        floor: {
            noise2D: {
                 # No effect in this context.
                scale: 0.5
                frequency: 0.02
                minVal: 0
                maxVal: 8
            }
        }
    }
}